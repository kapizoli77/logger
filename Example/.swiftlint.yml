opt_in_rules:
  - closure_spacing
  - unneeded_parentheses_in_closure_argument
  - closure_end_indentation
  - conditional_returns_on_newline
  - overridden_super_call
  - private_outlet
  - switch_case_on_newline
  - redundant_nil_coalescing
  - let_var_whitespace
  - multiline_arguments
  - multiline_parameters
  - attributes
  - operator_usage_whitespace
  - strict_fileprivate
  - modifier_order

disabled_rules: # rule identifiers to exclude from running
    - trailing_whitespace

excluded: # paths to ignore during linting. Takes precedence over `included`.
    - Pods
    - build
    - .git

included:
    - ../Logger/Classes

# customize rules
nesting:
    type_level: 5
identifier_name:
  min_length: 2
  max_length:
    warning: 40
    error: 50
  excluded:
    - x
    - y
    - i
large_tuple:
  warning: 3
  error: 4
function_body_length:
  warning: 60
file_length:
  warning: 600
  error: 700
  ignore_comment_only_lines: true
line_length:
  warning: 160
  error: 180
  ignores_comments: true
  ignores_urls: true
  ignores_interpolated_strings: true
type_name:
  min_length: 2
  max_length:
    warning: 45
    error: 50
type_body_length:
  warning: 500
  error: 550
cyclomatic_complexity: 15
conditional_returns_on_newline:
  if_only: true
custom_rules:
  unnecessary_nil_assignment:
    included: ".*.swift"
    regex: 'var \S+\s*:\s*[^\s]+\?\s*=\s*nil'
    name: "Unnecessary Nil Assignment"
    message: "Don't assign nil as a value when defining an optional type – it's nil by default."
    severity: warning
  vertical_whitespace_opening_braces:
    included: ".*.swift"
    regex: '[{(\[][ \t]*\n[ \t]*\n'
    name: "Vertical Whitespace after Opening Braces"
    message: "Don't include vertical whitespace (empty line) after opening braces."
    severity: warning
  vertical_whitespace_closing_braces:
    included: ".*.swift"
    regex: '\n[ \t]*\n[ \t]*[)}\]]'
    name: "Vertical Whitespace before Closing Braces"
    message: "Don't include vertical whitespace (empty line) before closing braces."
    severity: warning
  missing_closure_name:
    name: "Missing closure name"
    regex: '^\s*\}\) \{.*'
    message: "Add the missing closure name"
    severity: warning
  unnecessary_leading_void_in:
    name: "Unnecessary -> Void in at the end of the line"
    regex: '(-> (Void|\(\)) in$)'
    message: "Unnecessary '-> Void in' at the end of the line. Use only 'in'"
    severity: warning
  empty_closure_params:
    name: "Empty closure params"
    regex: '\{ (\(\) -> Void in)$'
    message: "`() -> Void in` should be avoided"
    severity: warning
  get_prefixed_function:
    name: "Get prefixed function"
    regex: '(?-smxi)(func get[A-Z0-9][\w]+?(\())'
    message: "You should not prefix your functions with the word get."
    severity: warning
  empty_line_after_super:
    name: "Empty Line After Super"
    regex: '(^ *super\.[ a-zA-Z0-9=?.\(\)\{\}:,><!]*\n *(?!(?:\}|return))\S+)'
    message: "There should be an empty line after super"
    severity: warning
  lowercase_constants:
    name: "Lowercase Constants"
    regex: '[ \t]let[ \t]*[A-Z][\w]*[ \t]*(=|:)'
    message: "Constants should begin with a lowercase character."
    severity: warning
    match_kinds:
        - argument
        - attribute.builtin
        - attribute.id
        - buildconfig.id
        - buildconfig.keyword
        - comment
        - comment.mark
        - comment.url
        - doccomment
        - doccomment.field
        - identifier
        - keyword
        - number
        - objectliteral
        - parameter
        - placeholder
        - typeidentifier
  double_space:
    include: "*.swift"
    name: "Double space"
    regex: "([a-z,A-Z] \\s+)"
    message: "Double space between keywords"
    match_kinds: keyword
    severity: warning
  whitespace_comment_start:
    included: ".*.swift"
    regex: '[^:#][^:#]\/\/[^\s\/]'
    name: "Whitespace Comment Start"
    message: "A comment should always start with a whitespace."
    severity: warning
  vertical_whitespaces_around_mark:
    included: ".*.swift"
    regex: '\/\/\s*MARK:[^\n]*(\n)(?!\n)|(\n\n\n)[ \t]*\/\/\s*MARK:|[^\s{]\n[^\n\/]*\/\/\s*MARK:'
    name: "Vertical Whitespaces Around MARK:"
    message: "Include a single vertical whitespace (empty line) before and after MARK: comments."
